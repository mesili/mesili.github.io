{"version":3,"sources":["helpers/actionCreator.js","domain/Products/state/index.js","domain/Cart/state/index.js","store/index.js","domain/Layout/index.jsx","data/productItems.js","components/Button/index.jsx","domain/Cart/CartButton/index.jsx","domain/Products/ProductItem/index.jsx","components/Info/index.jsx","domain/Products/ProductList/index.jsx","domain/Cart/CartHome/index.jsx","domain/Cart/CartFull/index.jsx","components/QuantityButton/index.jsx","domain/Cart/CartProductList/index.jsx","domain/Cart/CartDrawer/index.jsx","data/coupons.js","domain/Cart/Coupon/index.jsx","domain/Cart/CartPrice/index.jsx","domain/Products/ProductsHome/index.jsx","domain/App/index.jsx","serviceWorker.js","index.js"],"names":["type","payload","dispatch","constants","actions","actionCreator","defaultState","list","productId","quantity","maxProducts","drawer","products","selection","prices","initialPrice","couponEligiblePrice","couponPrice","finalPrice","coupon","availableCoupons","calculatePrices","reduce","acc","cur","price","filter","p","availableCoupon","couponIneligiblePrice","discountValue","discountRate","discountAmount","applyCoupon","Math","floor","rootReducer","combineReducers","state","reducers","sort","a","b","score","cart","retrieveCoupon","length","push","includes","id","productIndex","findIndex","splice","selectionIndex","indexOf","productIdx","composeEnhancers","compose","middlewares","thunkMiddleware","Layout","children","to","href","title","coverImage","Button","className","block","rest","AddLabel","RemoveLabel","CartButton","useDispatch","useSelector","addToast","useToasts","active","e","handleClick","appearance","product","onClick","ProductItem","picture","src","alt","toLocaleString","Info","props","ProductList","map","i","key","CartHome","CartFull","QuantityButton","value","onChange","CartProductList","handleDelete","onCheck","onQuantity","checked","parseInt","change","qty","CartDrawer","useEffect","document","querySelector","classList","add","remove","Coupon","idx","couponData","CartPrice","ProductsHome","defaultProducts","App","store","initialState","createStore","applyMiddleware","placement","autoDismiss","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d12dc13e.chunk.js","sourcesContent":["export default (type, payload) => dispatch => dispatch({type,payload});\n","import actionCreator from \"helpers/actionCreator\";\n\nexport const constants = {\n    SET:\"product/set\",\n};\n\nexport const actions = {\n    set: payload => actionCreator(constants.SET, payload)\n};\n\n\nconst defaultState = {\n    list:[]\n};\n\nexport const products = (state = defaultState, {type, payload}) => {\n\n    const reducers = {\n\n        /* Populating products */\n\n        [constants.SET]: () => {\n\n            /* Sorting by score DESC by default */\n            payload.sort((a,b) => b.score - a.score);\n\n            return {\n                ...state,\n                list: payload\n            };\n\n        }\n\n    };\n\n    if (reducers[type]) {\n        return reducers[type]();\n    }\n\n    return state;\n\n};\n","import actionCreator from \"helpers/actionCreator\";\n\nexport const constants = {\n    ADD: \"cart/add\",\n    DEL: \"cart/del\",\n    QUANTITY: \"cart/quantity\",\n    ADD_COUPON: \"cart/addCoupon\",\n    REMOVE_COUPON: \"cart/removeCoupon\",\n    SELECT: \"cart/select\",\n    STORE_COUPONS: \"cart/storeCoupons\",\n    TOGGLE_DRAWER: \"cart/toggleDrawer\",\n};\n\nexport const actions = {\n    add: payload => actionCreator(constants.ADD, payload),\n    del: payload => actionCreator(constants.DEL, payload),\n    quantity: (productId, quantity) => actionCreator(constants.QUANTITY, {productId, quantity}),\n    select: productId => actionCreator(constants.SELECT, productId),\n    addCoupon: payload  => actionCreator(constants.ADD_COUPON, payload),\n    removeCoupon: payload => actionCreator(constants.REMOVE_COUPON, payload),\n    storeCoupons: payload => actionCreator(constants.STORE_COUPONS, payload),\n    toggleDrawer: payload => actionCreator(constants.TOGGLE_DRAWER, payload),\n};\n\nconst defaultState = {\n    maxProducts: 0,          // Max product (0 = infinite)\n    drawer: false,            // Used in cart drawer\n    products: [],             // Products in the cart\n    selection:[],             // Products selected for checkout\n    prices:{                  // Prices shown in the cart \n        initialPrice: 0,\n        couponEligiblePrice:0,\n        couponPrice: 0,\n        finalPrice: 0,\n    },\n    /* Note : coupons could have their own domain / state */\n    coupon: null,             // Coupon index\n    availableCoupons:[],      // Coupons available for this cart\n};\n\nconst applyCoupon = (coupon, price) => {\n    const discountValue = coupon.type === \"rate\" \n        ? price * (coupon.discountRate/100)\n        : coupon.discountAmount;\n\n    if (discountValue > price) return price;\n\n    return discountValue;\n};\n\nconst calculatePrices = (products, coupon) => {\n\n    /* Value from products * quantity */\n    const initialPrice = products.reduce((acc, cur) => acc + (cur.price * cur.quantity), 0);\n\n    /* Value from products eligible to coupon discount */\n    const couponEligiblePrice = products\n        .filter(p => p.availableCoupon !== false)\n        .reduce((acc, cur) => acc + (cur.price * cur.quantity), 0);\n\n    /* Value from products not eligible to coupon discount */\n    const couponIneligiblePrice = initialPrice - couponEligiblePrice; \n\n    /* Value of the discount */\n    const couponPrice = coupon \n        ? applyCoupon(coupon, couponEligiblePrice)\n        : 0;\n\n    /* Value from (products * quantity) - discount */\n    const finalPrice = couponIneligiblePrice + (couponEligiblePrice - couponPrice);\n\n    return {\n        initialPrice,\n        couponEligiblePrice,\n        couponPrice: Math.floor(couponPrice),\n        finalPrice: Math.floor(finalPrice),\n    };\n\n};\n\nexport const cart = (state = defaultState, {type, payload}) => {\n\n    const retrieveCoupon = () => null === state.coupon\n        ? null\n        : state.availableCoupons[state.coupon];\n\n    const reducers = {\n\n        /* Adding product to cart */\n\n        [constants.ADD]: () => {\n            const { products, selection } = state;\n            if (state.maxProducts && products.length >= state.maxProducts) {\n                return state;\n            }\n            products.push(payload);\n            const prices = calculatePrices(products.filter(p => selection.includes(p.id)), retrieveCoupon());\n            return {\n                ...state,\n                products,\n                prices,\n            };\n        },\n\n        /* Removing product from cart */\n\n        [constants.DEL]: () => {\n            const { products, selection } = state;\n            const productIndex = products.findIndex(p => p.id === payload);\n            products.splice(productIndex,1);\n            const selectionIndex = selection.indexOf(payload);\n            selection.splice(selectionIndex,1);\n            const prices = calculatePrices(products.filter(p => selection.includes(p.id)), retrieveCoupon());\n            return {\n                ...state, \n                products,\n                prices, \n            };\n        },\n\n        /* Updating quantity of product in cart */\n\n        [constants.QUANTITY]: () => {\n            const { productId, quantity } = payload;\n            const { products, selection } = state; \n \n            if (quantity > 0) {\n                const productIdx = products.findIndex(p => p.id === productId); \n                products[productIdx].quantity = quantity;\n\n                const prices = calculatePrices(products.filter(p => selection.includes(p.id)), retrieveCoupon());\n\n                return {\n                    ...state, \n                    products,\n                    prices,\n                };\n            }\n\n            return state;\n        },\n\n        /* Selecting product for checkout */\n\n        [constants.SELECT]: () => {\n            const productIndex = state.selection.indexOf(payload);\n            const selection = [...state.selection];\n\n            if (productIndex === -1) {\n                selection.push(payload);\n            } else {\n                selection.splice(productIndex,1);\n            }\n\n            const prices = calculatePrices(state.products.filter(p => selection.includes(p.id)), retrieveCoupon());\n\n            return {\n                ...state, \n                selection,\n                prices,\n            };\n        },\n\n        /* Store available coupons */\n\n        [constants.STORE_COUPONS]: () => {\n            return {\n                ...state,\n                availableCoupons: payload\n            };\n        },\n\n\n        /* Add coupon to current cart */\n\n        [constants.ADD_COUPON]: () => {\n            const { \n                products, \n                selection, \n                availableCoupons \n            } = state;\n\n            const prices = calculatePrices(\n                products.filter(p => selection.includes(p.id)),\n                availableCoupons[payload]\n            );\n\n            return {\n                ...state,\n                prices,\n                coupon: payload,\n            };\n        },\n\n        /* Toggle the drawer (UI state) */\n\n        [constants.TOGGLE_DRAWER]: () => {\n            return {\n                ...state,\n                drawer:!state.drawer\n            };\n        },\n\n    };\n\n    if (reducers[type]) {\n        return reducers[type]();\n    }\n\n    return state;\n\n};\n","import { compose, createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\n\nimport  { products }  from \"domain/Products/state\";\nimport  { cart }  from \"domain/Cart/state\";\n\nconst rootReducer = combineReducers({\n    products,\n    cart,\n});\n\nexport default rootReducer;\n\nconst isDev = process.env.NODE_ENV === \"development\"; \n\nconst composeEnhancers = (isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) \n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({trace:true, traceLimit:25 }) \n    : compose;\n\nconst middlewares = [\n    thunkMiddleware,\n];\n\nif (isDev) {\n    const { logger } = require(\"redux-logger\");\n    middlewares.push(logger);\n}\n\nexport const store = initialState => createStore(\n    rootReducer,\n    initialState, \n    composeEnhancers( applyMiddleware( ...middlewares ) ) \n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './style.scss'\n\nexport const Layout = ({ children }) => (\n    <div id=\"main-layout\">\n\n        <header>\n            <h2>Shopping Cart</h2>\n            <ul>\n                <li>\n                    <Link to=\"/products\">Products</Link>\n                </li>\n                <li>\n                    <Link to=\"/cart\">Cart</Link>\n                </li>\n            </ul>\n        </header>\n\n        <main>\n            {children}\n        </main>\n\n        <footer>\n            Author : <a href=\"https://sebastien.mesili.fr\">Sebastien Mesili</a> - <a href=\"https://github.com/mesili/\">github</a>\n        </footer>\n\n    </div>\n)\n\nLayout.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.arrayOf(PropTypes.node)\n    ]).isRequired\n}\n\nexport default Layout\n","export default [\n    {\n        id: 1,\n        title: \"Product 1\",\n        coverImage: \"https://placehold.it/400x400\",\n        price: 56,\n        score: 200,\n    },\n    {\n        id: 2,\n        title: \"Product 2\",\n        coverImage: \"https://placehold.it/400x400\",\n        price: 32,\n        score: 300,\n\n    },\n    {\n        id: 3,\n        title: \"Product 3\",\n        coverImage: \"https://placehold.it/400x400\",\n        price: 24,\n        score: 350,\n\n    },\n    {\n        id: 4,\n        title: \"Product 4\",\n        coverImage: \"https://placehold.it/400x400\",\n        price: 900,\n        score: 120,\n        availableCoupon: false,\n    },\n    {\n        id: 5,\n        title: \"Product 5\",\n        coverImage: \"https://placehold.it/400x400\",\n        price: 230,\n        score: 640,\n    },\n    {\n        id: 6,\n        title: \"Product 6\",\n        coverImage: \"https://placehold.it/400x400\",\n        price: 320,\n        score: 200,\n    },\n    {\n        id: 7,\n        title: \"Product 7\",\n        coverImage: \"https://placehold.it/400x400\",\n        price: 180,\n        score: 190,\n        availableCoupon: false,\n    },\n    {\n        id: 8,\n        title: \"Product 8\",\n        coverImage: \"https://placehold.it/400x400\",\n        price: 123,\n        score: 453,\n    },\n    {\n        id: 9,\n        title: \"Product 9\",\n        coverImage: \"https://placehold.it/400x400\",\n        price: 345,\n        score: 300,\n        availableCoupon: false,\n    },\n    {\n        id: 10,\n        title: \"Product 10\",\n        coverImage: \"https://placehold.it/400x400\",\n        price: 50,\n        score: 300,\n    },\n    {\n        id: 11,\n        title: \"Product 11\",\n        coverImage: \"https://placehold.it/400x400\",\n        price: 564,\n        score: 150,\n    },\n    {\n        id: 12,\n        title: \"Product 12\",\n        coverImage: \"https://placehold.it/400x400\",\n        price: 23,\n        score: 220,\n    }\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.scss'\n\nexport const Button = ({\n    className='', \n    block=false, \n    ...rest\n}) => (\n    <button \n        {...rest} \n        className={`button ${className} ${block ? 'button-block' : ''}`} \n    />\n)\n\nButton.propTypes = {\n    className: PropTypes.string,\n    block: PropTypes.bool,\n}\n\nexport default Button\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FaTrash, FaCartArrowDown } from 'react-icons/fa'\nimport { useToasts } from 'react-toast-notifications'\nimport Button from 'components/Button'\nimport { actions } from 'domain/Cart/state';\nimport './style.scss'\n\n\n\nconst AddLabel = () => (\n    <>\n        <FaCartArrowDown /> Add to cart\n    </>\n)\n\nconst RemoveLabel = () => (\n    <>\n        <FaTrash /> Remove\n    </>\n)\n\nexport const CartButton = ({productId}) => {\n    \n    const dispatch = useDispatch()\n\n    const { list } = useSelector(state => state.products)\n    const { maxProducts, products } = useSelector(state => state.cart)\n\n    const { addToast } = useToasts()\n\n    const active = products.filter(e => e.id === productId).length > 0\n\n    const handleClick = async () => {\n\n        if (active) {\n\n            return dispatch(actions.del(productId))\n\n        } else if (maxProducts && products.length >= maxProducts) {\n\n            return addToast(`You can add up to ${maxProducts} products to your cart.`, { appearance: 'error' })\n\n        }\n\n        const product = list.filter(e => e.id === productId)\n\n        if (product.length) {\n            await dispatch(actions.add({\n                ...product[0],\n                quantity:1,\n           }))\n\n            dispatch(actions.toggleDrawer())\n        }\n    }\n\n    return (\n        <Button \n            className={`add-to-cart ${active ? 'active' : ''}`}\n            onClick={handleClick}\n        >\n            {active ? <RemoveLabel /> : <AddLabel />  }\n        </Button>\n    )\n\n}\n\nCartButton.propTypes = {\n    productId: PropTypes.string.isRequired,\n}\n\nexport default CartButton\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CartButton from 'domain/Cart/CartButton';\nimport './style.scss';\n\n\nexport const ProductItem = ({\n    id,\n    title, \n    price, \n    picture\n}) => (\n    <div className=\"product-item\">\n\n        <div className=\"picture-container\">\n            <img \n                className=\"picture\" \n                src={picture} \n                alt={`${title} picture`}\n            />\n        </div>\n\n        <div className=\"title\">{title}</div>\n\n        <div className=\"bottom\">\n\n            <div className=\"product-actions\">\n                <CartButton productId={id} />\n            </div>\n\n            <span className=\"price\">${price.toLocaleString()}USD</span>\n\n        </div>\n\n    </div>\n)\n\nProductItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    picture: PropTypes.string.isRequired,\n}\n\nexport default ProductItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.scss'\n\nexport const Info =  props => (<div className=\"info\" {...props} />)\n\nInfo.propTypes = {\n    children: PropTypes.oneOfType([\n            PropTypes.element,\n            PropTypes.string\n        ]).isRequired\n}\n\nexport default Info;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ProductItem } from 'domain/Products';\nimport Info from 'components/Info';\nimport { actions } from 'domain/Cart/state';\nimport './style.scss'\n\n\nexport const ProductList = () => {\n\n    const dispatch = useDispatch()\n\n    /* Luckiy, list is not a javascript reserved keyword */\n    const { list }  = useSelector(state => state.products) \n    const { drawer }  = useSelector(state => state.cart) \n\n    const handleClick = () => drawer && dispatch(actions.toggleDrawer())\n\n    if (!list || !list.length) {\n        return <Info>No product to display.</Info>\n    }\n\n\n    return (\n        <div className=\"product-list\" onClick={handleClick}>\n            {list.map(({id, title, coverImage, price, score},i) => (\n                <ProductItem \n                    id={id}\n                    title={title}\n                    price={price}\n                    score={score}\n                    picture={coverImage}\n                    key={`productlist_item_${id}`} \n                />\n            ))}\n        </div>\n    );\n\n}\n\nexport default ProductList\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Layout } from 'domain/Layout';\nimport { CartPrice, CartProductList } from 'domain/Cart';\nimport './style.scss'\n\n\nexport const CartHome = () => {\n\n    const { list } = useSelector(state => state.cart) \n\n    return (\n        <Layout>\n            <div className=\"cart-home\">\n\n                <div className=\"recap\">\n                    <div className=\"products\">\n                        <h3>Select the products to checkout</h3>\n                        <CartProductList \n                            products={list} \n                        />\n                    </div>\n\n                    <aside className=\"total-price\">\n                        <CartPrice />\n                    </aside>\n\n                </div>\n\n            </div>\n        </Layout>\n    );\n}\n\nexport default CartHome;\n","import React from 'react';\nimport Info from 'components/Info';\nimport { useSelector } from 'react-redux';\n\nexport const CartFull = () => {\n\n    const { maxProducts } = useSelector(state => state.cart) \n\n    return (\n        <div className=\"cart-full\">\n            <Info>\n                You can add up to {maxProducts} to your cart.\n            </Info>\n        </div>\n    )\n}\n\nexport default CartFull\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaPlus, FaMinus } from 'react-icons/fa';\nimport Button from 'components/Button';\nimport './style.scss';\n\n\nexport const QuantityButton = ({\n    value=1,\n    onChange,\n}) => (\n\n    <div className=\"quantity-button\">\n        <Button \n            className=\"minus\"\n            onClick={() => onChange(-1)}\n        >\n            <FaMinus />\n        </Button>\n        <span className=\"qty\">\n            {value}\n        </span>\n        <Button \n            className=\"plus\"\n            onClick={() => onChange(1)}\n        >\n            <FaPlus />\n        </Button>\n    </div>\n)\n\nQuantityButton.propTypes = {\n    value: PropTypes.number.isRequired,\n    onChange: PropTypes.func.isRequired,\n}\n\nexport default QuantityButton;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FaTrash } from 'react-icons/fa';\nimport Button from 'components/Button';\nimport { actions } from 'domain/Cart/state';\nimport { CartFull } from 'domain/Cart'\nimport QuantityButton from 'components/QuantityButton';\nimport Info from 'components/Info';\nimport './style.scss'\n\nexport const CartProductList = () => {\n\n    const dispatch = useDispatch()\n\n    const { maxProducts, products, selection } = useSelector(state => state.cart)\n\n    if (!products || !products.length) {\n        return (\n            <div className=\"empty-cart\">\n                <Info>\n                    No product in your cart.\n                </Info>\n            </div>\n        )\n    }\n\n    const handleProductQuantity = (productId, qty) => qty > 0 && dispatch(actions.quantity(productId, qty))\n\n    const handleProductCheck = productId => dispatch(actions.select(productId)) \n\n    const handleDelete = productId => dispatch(actions.del(productId))\n\n    /* TODO : Split as separate CartProductListItem component */\n\n    return (\n\n        <div className=\"cart-product-list\">\n            {products.map(({\n                id,\n                title,\n                coverImage,\n                price,\n                availableCoupon,\n                quantity,\n                onCheck,\n                onQuantity,\n            }) => (\n\n                <div className=\"cart-product\" key={`cart_product_${id}`}>\n\n                    <div className=\"checkbox-container\">\n                        <input \n                            type=\"checkbox\" \n                            onChange={() => handleProductCheck(id)} \n                            checked={selection.indexOf(id) !== -1}\n                        />\n                    </div>\n\n                    <div className=\"picture\">\n                        <img src={coverImage} alt={`${title} picture`} />\n                    </div>\n\n                    <div className=\"description\">\n                        <div className=\"title\">\n                            {title}\n                        </div>\n\n                        <div className=\"remove\">\n                            <Button onClick={handleDelete}>\n                                <FaTrash /> Remove\n                            </Button>\n                        </div>\n\n                        <div className=\"price\">\n                            ${parseInt(price).toLocaleString()}USD\n                            {availableCoupon === false ? (<span>No coupon</span>) : ''}\n                        </div>\n\n                    </div>\n\n                    <div className=\"quantity\">\n                        <QuantityButton \n                            value={quantity} \n                            onChange={change => handleProductQuantity(id, quantity + change)} \n                        />\n                    </div>\n\n                </div>\n            ))}\n\n                {maxProducts && products.length >= maxProducts ? <CartFull /> :''}\n\n        </div>\n\n    );\n}\n\nexport default CartProductList;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FaShoppingCart } from 'react-icons/fa';\nimport { CartPrice, CartProductList } from 'domain/Cart';\nimport { actions } from 'domain/Cart/state';\nimport './style.scss';\n\n\nexport const CartDrawer = () => {\n\n    const dispatch = useDispatch()\n\n    const { drawer, list } = useSelector(state => state.cart) \n\n    const toggle = () => dispatch(actions.toggleDrawer())\n\n    /* A good addition would be a click event listener on <body>\n     * to close the drawer on whatever click outside of .cart-drawer\n     */\n\n    useEffect(() => {\n        if (drawer) {\n            document.querySelector('body').classList.add('no-scroll')\n        }else {\n            document.querySelector('body').classList.remove('no-scroll')\n        }\n    }, [drawer])\n\n    return (\n\n        <div className={`cart-drawer ${drawer ? 'pulled' : ''}`}>\n\n            <div className=\"inner\">\n\n                <div className=\"products\">\n                    <h3>Select the  products to checkout</h3>\n                    <CartProductList \n                        products={list} \n                    />\n                </div>\n\n                <CartPrice />\n\n            </div>\n\n            <div className=\"puller\" onClick={toggle}>\n                <FaShoppingCart /> \n            </div>\n\n        </div>\n    )\n}\n\nexport default CartDrawer;\n","export default [\n    {\n        type: \"rate\",\n        title: \"-10%\",\n        discountRate: 10,\n    },\n    {\n        type: \"amount\",\n        title: \"-10\",\n        discountAmount: 10,\n    }\n];\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FaTicketAlt, FaCheckSquare, FaSquare } from 'react-icons/fa';\nimport couponData from 'data/coupons';\nimport { actions } from 'domain/Cart/state';\nimport './style.scss'\n\nexport const Coupon = () => {\n\n    const dispatch = useDispatch();\n\n    const { \n        prices, \n        coupon,\n        availableCoupons,\n    } = useSelector(state => state.cart)\n\n    const handleClick = idx => dispatch(actions.addCoupon(idx))\n\n    useEffect(() => {\n        /* async loading simulation */\n        dispatch(actions.storeCoupons(couponData))\n    },[dispatch])\n\n    if (prices.couponEligiblePrice === 0) return null\n\n    else if (!availableCoupons) { return null }\n\n    return (\n        <ul className=\"coupon-selector\">\n            {availableCoupons.map( ({type, title, discountRate}, i) => (\n                <li \n                    key={`coupon_idx_${i}`}\n                >\n                    <button \n                        className={coupon === i ? 'active' : ''}\n                        onClick={() => handleClick(i)}\n                    >\n                        {coupon === i \n                            ? <FaCheckSquare /> \n                            : <FaSquare /> \n                        }\n                        <FaTicketAlt /> \n                        {title} \n                    </button>\n                </li>\n            ))}\n\n            <li>\n                <button \n                    className={coupon === null ? 'active' : ''}\n                    onClick={() => handleClick(null)}\n                >\n                    {coupon === null \n                        ? <FaCheckSquare /> \n                        : <FaSquare /> \n                    }\n                    <FaTicketAlt /> \n                    No coupon\n                </button>\n            </li>\n        </ul>\n    )\n}\n\nexport default Coupon;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { FaRegCreditCard  } from 'react-icons/fa';\nimport { useToasts } from 'react-toast-notifications'\nimport Button  from 'components/Button';\nimport { Coupon } from 'domain/Cart/Coupon';\nimport './style.scss';\n\n\nexport const CartPrice = () => {\n    \n    const { \n        prices,\n        products,\n    } = useSelector(state => state.cart)\n\n    const { addToast } = useToasts()\n\n    const {\n        initialPrice,\n        couponPrice,\n        finalPrice,\n    } = prices \n\n    const handleClick = () => addToast('The demo stops here :-)', { appearance: 'info' })\n\n    return (\n\n        <div className=\"cart-price\">\n            <h3>Checkout prices</h3>\n\n            <dl>\n                <dt>Initial price</dt>\n                <dd>${initialPrice.toLocaleString()}USD</dd>\n            </dl>\n\n            <Coupon />\n\n            {couponPrice > 0 && (\n                <dl>\n                    <dt>Coupon discounts</dt>\n                    <dd><b>-{couponPrice.toLocaleString()}</b></dd>\n                </dl>\n            )}\n\n            <dl className=\"total\">\n                <dt>Total price</dt>\n                <dd>${finalPrice.toLocaleString()}USD</dd>\n            </dl>\n\n            {!products || !products.length ? '' :  (\n                <Button \n                    block \n                    className=\"checkout-button\"\n                    onClick={handleClick}\n                >\n                    <FaRegCreditCard /> Proceed to payment\n                </Button>\n            )}\n        </div>\n\n    );\n}\n\nexport default CartPrice;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Layout } from 'domain/Layout';\nimport defaultProducts from 'data/productItems';\nimport { ProductList } from 'domain/Products';\nimport { CartDrawer } from 'domain/Cart';\nimport { actions } from 'domain/Products/state';\n\n\nexport const ProductsHome = () => {\n\n    const dispatch = useDispatch()\n\n    /* Async product retrieval */\n    useEffect(() => { \n        dispatch(actions.set(defaultProducts))\n    }, [ dispatch ])\n\n    /* TODO : Show a loader while there is no products loaded */\n\n    return (\n        <Layout>\n            <CartDrawer />\n            <ProductList />\n        </Layout>\n    );\n    \n}\n\nexport default ProductsHome\n","import React from \"react\";\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter as Router, Redirect } from 'react-router-dom';\nimport { ToastProvider } from 'react-toast-notifications';\n\nimport { store } from 'store/';\nimport { ProductsHome } from 'domain/Products/ProductsHome';\nimport { CartHome } from 'domain/Cart/CartHome';\n\n\nexport const App = () => (\n    <Provider store={store({})}>\n        <ToastProvider placement=\"top-center\" autoDismiss={3000}>\n            <Router>\n                <Switch>\n                    <Route path=\"/products\" component={ProductsHome} />\n                    <Route path=\"/cart\" component={CartHome} />\n                    <Route path=\"/\" component={() => <Redirect to=\"/products\" />} />\n                </Switch>\n            </Router>\n        </ToastProvider>\n    </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"domain/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}